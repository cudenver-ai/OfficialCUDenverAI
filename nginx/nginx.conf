worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # SSL Settings for Letâ€™s Encrypt
    ssl_certificate  /etc/letsencrypt/live//cudenver-ai.tech/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/cudenver-ai.tech/privkey.pem;    
    ssl_protocols TLSv1.2 TLSv1.3;  # Enable secure TLS protocols
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';  # Strong ciphers
    ssl_prefer_server_ciphers on;

    server {
        listen 80;
        server_name cudenver-ai.tech;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name cudenver-ai.tech;

       # SSL Configuration (same as above)
    ssl_certificate  /etc/letsencrypt/live/cudenver-ai.tech/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/cudenver-ai.tech/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;  # Enable secure TLS protocols
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';  # Strong ciphers
    ssl_prefer_server_ciphers on;

        # Route requests to the frontend
        location / {
            proxy_pass http://frontend:3000;  # Forward to the frontend service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Route API requests to the backend
        location /api/ {
            proxy_pass http://backend:8080/api/;   # Forward to the backend service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
